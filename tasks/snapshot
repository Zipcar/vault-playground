#!/usr/bin/env bash

# Vault Playground V3.0.1 snapshot
#
# This script creates a snapshot in the local cache ($HOME/.vault-playground/snapshots) that by default is named with a
# timestamp but also supports vanity naming via an environment variable. If used against a real AWS hosted instance of DynamoDB
# must pass AWS_PROFILE, or AWS_SECRET_ACCESS_KEY and AWS_ACCESS_KEY_ID.
#

: "${VP_NAMESPACE:=vp}" # Namespace for the local Vault playground, used for network and container names

declare snap_name

vp_snapshot_cache=$HOME/.vault-playground/snapshots
timestamp=$(date +%Y-%m-%d-%H-%M-%S)
local_dynamodb_region=local
default_dynamodb_table_name=vault-playground

: "${VP_DYNAMODB_REGION:=$local_dynamodb_region}"
: "${VP_DYNAMODB_TABLE:=$default_dynamodb_table_name}"
: "${VP_SNAPSHOT_NAME:=$timestamp}"

if [ ! $(command -v docker) ]; then
  echo -e "\ndocker not found! It must be installed before proceeding: https://www.docker.com/get-docker\n"
  exit 1
fi

mkdir -p ${vp_snapshot_cache}

if [ "${VP_DYNAMODB_REGION}" == "${local_dynamodb_region}" ]; then
  if [ -z $(docker ps -f name=${VP_NAMESPACE}-dynamodb -q) ]; then
    echo "Looks like there isn't a DynamoDB server running in Docker's $VP_NAMESPACE network. Did you mean to take a local snapshot?"
    exit 0
  fi
  echo "Snapshotting the $VP_DYNAMODB_TABLE table on the local DynamoDB instance..."
  docker_vault_id=$(docker ps -q -f name=${VP_NAMESPACE}-vault1)
  snap_name=$(docker ps -q -f name=${VP_NAMESPACE}-vault1)-${VP_SNAPSHOT_NAME}
  docker run --rm -i --network ${VP_NAMESPACE} -u $(id -u):$(id -g) -v ${vp_snapshot_cache}:/mnt/snapshots mattsurabian/dynamodump:1.1.1 sh -s <<EOF
dynamodump -m backup -r ${VP_DYNAMODB_REGION} -s ${VP_DYNAMODB_TABLE} --dumpPath /mnt/snapshots/${snap_name} --host vp-dynamodb --port 8000 --accessKey ${VP_DYNAMODB_REGION} --secretKey ${VP_DYNAMODB_REGION}
EOF
else
  # auth must occur with expected AWS environment variables, IAM role, etc
  snap_name=${VP_DYNAMODB_REGION}-${VP_SNAPSHOT_NAME}
  docker run --rm -i --network ${VP_NAMESPACE} -u $(id -u):$(id -g) -v $HOME/.aws:/root/.aws -e AWS_PROFILE=${AWS_PROFILE} -v ${vp_snapshot_cache}:/mnt/snapshots mattsurabian/dynamodump:1.1.1 sh -s <<EOF
dynamodump -m backup -r ${VP_DYNAMODB_REGION} -s ${VP_DYNAMODB_TABLE} --dumpPath /mnt/snapshots/${snap_name}
EOF
fi

echo "Wrote snapshot to $vp_snapshot_cache/$snap_name"
